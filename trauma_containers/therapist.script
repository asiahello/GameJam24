require("main.utils")


-- trauma container can have different capacity for trauma
-- now set 10 traumas for testinggo.property("capacity", 10)
go.property("capacity", 10)

function init(self)	
	label.set_text("#label", "Capacity: " .. self.capacity)
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		-- go.delete(message.other_id)
		self.capacity = self.capacity - 1
		label.set_text("#label", "Capacity: " .. self.capacity)
		-- msg.post("/gui#ui", "add_score", { score = 100 })
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end
