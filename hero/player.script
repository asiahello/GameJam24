local UP = hash("key_up")
local DOWN = hash("key_down")
local LEFT = hash("key_left")
local RIGHT = hash("key_right")

function init(self)
	msg.post(".", "acquire_input_focus")

	self.actions = {}

	self.moving = false
	self.firing = false

	self.input = vmath.vector3()
	self.dir = vmath.vector3(0, 1, 0)
	self.speed = 150 

	self.current_animation = nil
end

function final(self)
	msg.post(".", "release_input_focus")
	
end

local function update_animation(self)
	local new_animation = nil
	
	if self.dir.y > 0 then 
		new_animation = hash("player-up")
		--sprite.play_flipbook("#sprite", "player-up")
	elseif self.dir.y < 0 then
		new_animation = hash("player-down")
		-- sprite.play_flipbook("#sprite", "player-down")
	elseif self.dir.x < 0 then 
		new_animation = hash("player-left")
		-- sprite.play_flipbook("#sprite", "player-left")
	elseif self.dir.x > 0 then
		new_animation = hash("player-right")
		-- sprite.play_flipbook("#sprite", "player-right")
	end

	if new_animation ~= self.current_animation then
		msg.post("#sprite", "play_animation", {id = new_animation})
		self.current_animation = new_animation
	end
end

function update(self, dt)
	if self.moving then
		update_animation(self)
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)
	end

	if self.firing then
		-- pozycja wyjsciowa - w jakim kierunku utworzy sie bron 
		local angle = math.atan2(self.dir.y, self.dir.x)
		local rot = vmath.quat_rotation_z(angle) 
		local props = { dir = self.dir }
		factory.create("#rocket_factory", nil, rot, props)
	end

	self.input.x = 0
	self.input.y = 0
	self.moving = false
	self.firing = false
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == UP then
		self.input.y = 1
	elseif action_id == DOWN then
		self.input.y = -1
	elseif action_id == LEFT then
		self.input.x = -1
	elseif action_id == RIGHT then
		self.input.x = 1
	elseif action_id == hash("key_space") and action.released then
		self.firing = true
	end

	if vmath.length(self.input) > 0 then
		self.moving = true
		self.dir = vmath.normalize(self.input)
	end
end
